#include "Libraries.h"

void printProblemsMenu()
{
    cout << H_STYLE << "ВВЕДИТЕ НОМЕР СВОЕЙ ЗАДАЧИ ИЗ СПИСКА НИЖЕ, ЧТОБЫ ЕЁ ВЫБРАТЬ:\n\n" << D_STYLE;
    
    cout << IMP_STYLE << "<  ЗАДАЧА 1  >" << D_STYLE << '.' << endl;
    cout << H_STYLE << "\tВ одномерном массиве:\n" << D_STYLE;
    cout << H_STYLE << "\t1)" << D_STYLE;
    cout << " найти максимальный элемент массива. Найти их количество и позиции\n";
    cout << H_STYLE << "\t2)" << D_STYLE;
    cout << " найти произведение элементов массива, расположенных между 1 и 2 нулевыми элементами.\n";
    cout << "\t   найти позиции нулевых элементов, между которыми найдено произведение\n";
    cout << H_STYLE << "\t3)" << D_STYLE;
    cout << " преобразовать массив таким образом, чтобы в первой его половине располагались\n";
    cout << "\t   элементы, стоявшие в нечётных позициях, а во второй половине - элементы, стоявшие\n";
    cout << "\t   в чётных позициях.\n\n\n";

    cout << IMP_STYLE << "<__ЗАДАЧА 2.__>" << D_STYLE << '.' << endl;
    cout << H_STYLE << "\tДля заданной матрицы " << SP << "M" << H_STYLE << "х" << SP << "N" << H_STYLE << ", где " << SP << "M" << H_STYLE << " <= 8, " << SP << "N" << H_STYLE << " <= 8, найти:\n";
    cout << H_STYLE << "\t1)" << D_STYLE;
    cout << " такие " << SP << "k" << D_STYLE << ", что " << SP << "k" << D_STYLE << "-я строка матрицы совпадает с " << SP << "k" << D_STYLE << "-м столбцом.Вывести номер " << SP << "k" << D_STYLE << "\n";
    cout << "\t   и все элементы, расположенные в " << SP << "k" << D_STYLE << "-ой строке (столбце).\n";
    cout << "\t   " << IMP_STYLE << "(!)" << D_STYLE << " Задача имеет смысл только при " << SP << "N" << D_STYLE << " = " << SP << "M" << D_STYLE << "!\n";
    cout << H_STYLE << "\t2)" << D_STYLE;
    cout << " сумму элементов в тех строках, которые содержат хотя бы один отрицательный элемент.\n\n\n";
    
    cout << IMP_STYLE << "<__ЗАДАЧА 3.__>" << D_STYLE << ".\n";
    cout << H_STYLE << "\tПрочитать текст из файла " << D_STYLE;
    cout << "и вывести, сколько в нём слов длины " << SP << "N" << D_STYLE << ", где " << SP << "N" << D_STYLE << " <= 4.\n\n\n";

    cout << "Так же вы можете ввести 0, чтобы завершить программу.\n\n\n";
}

void printFirstProblemSpecialInfo(bool printZero)
{
    cout << H_STYLE << "Список подзадач:\n" << D_STYLE;

    if (printZero)
    {
        cout << H_STYLE << "0)" << D_STYLE;
        cout << " Вернуться в начальное меню" << H_STYLE << " (потеря введённого массива).\n" << D_STYLE;
    }
    
    cout << H_STYLE << "1)" << D_STYLE;
    cout << " Найти максимальный элемент массива. Количество таких элементов и их позиции.\n";

    cout << H_STYLE << "2)" << D_STYLE;
    cout << " Найти произведение элементов массива между 1 и 2 нулевыми элементами. Позиции нулевых\n";
    cout << "   элементов, между которыми найдено произведение.\n";

    cout << H_STYLE << "3)" << D_STYLE;
    cout << " Преобразовать массив таким образом, чтобы в первой его половине располагались\n";
    cout << "   элементы, стоявшие в нечетных позициях, а во второй половине – элементы,\n";
    cout << "   стоявшие в четных позициях.\n\n";
}

void printSecondProblemSpecialInfo(bool printZero)
{
    cout << H_STYLE << "Список подзадач:\n" << D_STYLE;

    if (printZero)
    {
        cout << H_STYLE << "0)" << D_STYLE;
        cout << " Вернуться в начальное меню " << H_STYLE << "(потеря введённой матрицы)" << D_STYLE << endl;
    }
    
    cout << H_STYLE << "1)" << D_STYLE;
    cout << " Найти такие числа " << SP << "k" << D_STYLE << ", что " << SP << "k" << D_STYLE << "-я строка матрицы совпадает с " << SP << "k" << D_STYLE << "-м столбцом. Вывести номер k\n";
    cout << "   и все элементы расположенные в " << SP << "k" << D_STYLE << "-ой строке (столбце)\n";
    cout << "  " << IMP_STYLE << "(!)" << D_STYLE << " Только для квадратных матриц (" << SP << "M" << D_STYLE << " = " << SP << "N" << D_STYLE << ")\n";

    cout << H_STYLE << "2)" << D_STYLE;
    cout << " Найти сумму элементов в тех строках, которые содержат хотя бы один отрицательный элемент.\n\n";
}